# Nombre del workflow que aparecerá en la pestaña "Actions" de GitHub
name: Deploy Backend to Server

# Disparador (trigger): Este workflow se ejecutará en cada 'push'
on:
  push:
    # Solamente para la rama 'main' (o la que uses, ej: 'master')
    branches:
      - main
    # Y solamente si los cambios ocurrieron dentro de la carpeta 'backend/'
    paths:
      - 'backend/**'

# Trabajos (jobs) que se ejecutarán
jobs:
  deploy:
    # El nombre del trabajo
    name: Deploy to Server
    # Usar la última versión de Ubuntu como sistema operativo del corredor
    runs-on: ubuntu-latest

    # Pasos (steps) que se ejecutarán en secuencia
    steps:
      # 1. Descargar el código del repositorio al corredor de GitHub
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Sincronizar archivos y reiniciar el servicio usando SSH
      - name: Sync files and restart service
        # Usamos una acción popular de la comunidad para ejecutar comandos SSH
        uses: appleboy/ssh-action@master
        with:
          # Usamos los secretos que configuramos en el Paso 4
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22 # Puerto SSH, usualmente 22
          
          # Script que se ejecutará en el servidor remoto
          script: |
            # 1. Navegar al directorio de destino en el servidor
            cd /root/quimex_2.0/sistema_quimicos
            
            # 2. Usar rsync para sincronizar los archivos de forma eficiente.
            #    -avz: archiva, verboso, comprime
            #    --delete: borra archivos en el destino que ya no existen en el origen
            #    El origen es la carpeta 'backend/' del repo y el destino es el directorio actual '.'
            rsync -avz --delete ${{ github.workspace }}/backend/ .
            
            # 3. Reiniciar el servicio usando el comando que configuramos con sudo
            echo "Archivos actualizados. Reiniciando el servicio..."
            sudo systemctl restart quimex.service
            echo "Servicio reiniciado con éxito."